// Generated by Dagger (https://dagger.dev).
package com.coderus.codingchallenge.dagger;

import android.content.Context;
import com.coderus.codingchallenge.room.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Module_ProvideDBFactory implements Factory<AppDatabase> {
  private final Provider<Context> contextProvider;

  public Module_ProvideDBFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public AppDatabase get() {
    return provideDB(contextProvider.get());
  }

  public static Module_ProvideDBFactory create(Provider<Context> contextProvider) {
    return new Module_ProvideDBFactory(contextProvider);
  }

  public static AppDatabase provideDB(Context context) {
    return Preconditions.checkNotNullFromProvides(Module.INSTANCE.provideDB(context));
  }
}
